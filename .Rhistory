invisible(dev.off())
# Quantidade de Amostras
nrow(data_frank)
ftempo <- difftime(data_frank$DateTime[-1],
data_frank$DateTime[-34780], units = "min")
qplot(ftempo, bins = 30, xlim = c(0, 50)) +
xlab("Periodicidade (Minutos)") + ylab("Contagem de Observações") +
theme_bw()
agg_png('C:/Users/Daniel/Desktop/WCAMA 2021/grid_periodicidade.png',
scaling = 4, width = 3000, height = 2000, units = 'px')
qplot(ftempo, bins = 30, xlim = c(0, 50)) +
xlab("Periodicidade (Minutos)") + ylab("Contagem de Observações")
invisible(dev.off())
library(tidyverse)
library(lubridate)
library(ggthemr)
library(ragg)
ggthemr("fresh")
data_frank <- read_csv("C:/Users/Daniel/Desktop/WCAMA 2021/sheet_master.csv")
data_frank %>%
drop_na(A0:D5)
data_frank %>%
drop_na(A0:D5) %>%
mutate(A0 = ifelse(!is.na(A0), 1, NA), A1 = ifelse(!is.na(A1), 2, NA),
A2 = ifelse(!is.na(A2), 3, NA), A3 = ifelse(!is.na(A3), 4, NA),
A4 = ifelse(!is.na(A4), 5, NA), A5 = ifelse(!is.na(A5), 6, NA),
AB0 = ifelse(!is.na(AB0), 7, NA), AB1 = ifelse(!is.na(AB1), 8, NA),
AB2 = ifelse(!is.na(AB2), 9, NA), AB3 = ifelse(!is.na(AB3), 10, NA),
AB4 = ifelse(!is.na(AB4), 11, NA), AB5 = ifelse(!is.na(AB5), 12, NA),
B0 = ifelse(!is.na(B0), 13, NA), B1 = ifelse(!is.na(B1), 14, NA),
B2 = ifelse(!is.na(B2), 15, NA), B3 = ifelse(!is.na(B3), 16, NA),
B4 = ifelse(!is.na(B4), 17, NA), B5 = ifelse(!is.na(B5), 18, NA),
C0 = ifelse(!is.na(C0), 19, NA), C1 = ifelse(!is.na(C1), 20, NA),
C2 = ifelse(!is.na(C2), 21, NA), C3 = ifelse(!is.na(C3), 22, NA),
C4 = ifelse(!is.na(C4), 23, NA), C5 = ifelse(!is.na(C5), 24, NA),
CD0 = ifelse(!is.na(CD0), 25, NA), CD1 = ifelse(!is.na(CD1), 26, NA),
CD2 = ifelse(!is.na(CD2), 27, NA), CD3 = ifelse(!is.na(CD3), 28, NA),
CD4 = ifelse(!is.na(CD4), 29, NA), CD5 = ifelse(!is.na(CD5), 30, NA),
D0 = ifelse(!is.na(D0), 31, NA), D1 = ifelse(!is.na(D1), 32, NA),
D2 = ifelse(!is.na(D2), 33, NA), D3 = ifelse(!is.na(D3), 34, NA),
D4 = ifelse(!is.na(D4), 35, NA), D5 = ifelse(!is.na(D5), 36, NA))
agg_png('C:/Users/Daniel/Desktop/WCAMA 2021/grid_complet_all.png',
scaling = 4, width = 10000, height = 2000, units = 'px')
data_frank %>%
drop_na(A0:D5) %>%
mutate(A0 = ifelse(!is.na(A0), 1, NA), A1 = ifelse(!is.na(A1), 2, NA),
A2 = ifelse(!is.na(A2), 3, NA), A3 = ifelse(!is.na(A3), 4, NA),
A4 = ifelse(!is.na(A4), 5, NA), A5 = ifelse(!is.na(A5), 6, NA),
AB0 = ifelse(!is.na(AB0), 7, NA), AB1 = ifelse(!is.na(AB1), 8, NA),
AB2 = ifelse(!is.na(AB2), 9, NA), AB3 = ifelse(!is.na(AB3), 10, NA),
AB4 = ifelse(!is.na(AB4), 11, NA), AB5 = ifelse(!is.na(AB5), 12, NA),
B0 = ifelse(!is.na(B0), 13, NA), B1 = ifelse(!is.na(B1), 14, NA),
B2 = ifelse(!is.na(B2), 15, NA), B3 = ifelse(!is.na(B3), 16, NA),
B4 = ifelse(!is.na(B4), 17, NA), B5 = ifelse(!is.na(B5), 18, NA),
C0 = ifelse(!is.na(C0), 19, NA), C1 = ifelse(!is.na(C1), 20, NA),
C2 = ifelse(!is.na(C2), 21, NA), C3 = ifelse(!is.na(C3), 22, NA),
C4 = ifelse(!is.na(C4), 23, NA), C5 = ifelse(!is.na(C5), 24, NA),
CD0 = ifelse(!is.na(CD0), 25, NA), CD1 = ifelse(!is.na(CD1), 26, NA),
CD2 = ifelse(!is.na(CD2), 27, NA), CD3 = ifelse(!is.na(CD3), 28, NA),
CD4 = ifelse(!is.na(CD4), 29, NA), CD5 = ifelse(!is.na(CD5), 30, NA),
D0 = ifelse(!is.na(D0), 31, NA), D1 = ifelse(!is.na(D1), 32, NA),
D2 = ifelse(!is.na(D2), 33, NA), D3 = ifelse(!is.na(D3), 34, NA),
D4 = ifelse(!is.na(D4), 35, NA), D5 = ifelse(!is.na(D5), 36, NA)) %>%
pivot_longer(cols = c(A0:D5), names_to = "sensors", values_to = "temp") %>%
ggplot(aes(x = DateTime, y = temp)) +
geom_point(color = "darkred", size = 0.001) +
scale_y_continuous(breaks = 1:36, labels = sens) +
scale_x_datetime(date_labels = "%b/%y", date_breaks = "1 month") +
xlab("Data") + ylab("Sensor")
invisible(dev.off())
sens <- c(paste0("A", 0:5), paste0("AB", 0:5), paste0("B", 0:5),
paste0("C", 0:5), paste0("CD", 0:5), paste0("D", 0:5))
agg_png('C:/Users/Daniel/Desktop/WCAMA 2021/grid_complet_all.png',
scaling = 4, width = 10000, height = 2000, units = 'px')
data_frank %>%
drop_na(A0:D5) %>%
mutate(A0 = ifelse(!is.na(A0), 1, NA), A1 = ifelse(!is.na(A1), 2, NA),
A2 = ifelse(!is.na(A2), 3, NA), A3 = ifelse(!is.na(A3), 4, NA),
A4 = ifelse(!is.na(A4), 5, NA), A5 = ifelse(!is.na(A5), 6, NA),
AB0 = ifelse(!is.na(AB0), 7, NA), AB1 = ifelse(!is.na(AB1), 8, NA),
AB2 = ifelse(!is.na(AB2), 9, NA), AB3 = ifelse(!is.na(AB3), 10, NA),
AB4 = ifelse(!is.na(AB4), 11, NA), AB5 = ifelse(!is.na(AB5), 12, NA),
B0 = ifelse(!is.na(B0), 13, NA), B1 = ifelse(!is.na(B1), 14, NA),
B2 = ifelse(!is.na(B2), 15, NA), B3 = ifelse(!is.na(B3), 16, NA),
B4 = ifelse(!is.na(B4), 17, NA), B5 = ifelse(!is.na(B5), 18, NA),
C0 = ifelse(!is.na(C0), 19, NA), C1 = ifelse(!is.na(C1), 20, NA),
C2 = ifelse(!is.na(C2), 21, NA), C3 = ifelse(!is.na(C3), 22, NA),
C4 = ifelse(!is.na(C4), 23, NA), C5 = ifelse(!is.na(C5), 24, NA),
CD0 = ifelse(!is.na(CD0), 25, NA), CD1 = ifelse(!is.na(CD1), 26, NA),
CD2 = ifelse(!is.na(CD2), 27, NA), CD3 = ifelse(!is.na(CD3), 28, NA),
CD4 = ifelse(!is.na(CD4), 29, NA), CD5 = ifelse(!is.na(CD5), 30, NA),
D0 = ifelse(!is.na(D0), 31, NA), D1 = ifelse(!is.na(D1), 32, NA),
D2 = ifelse(!is.na(D2), 33, NA), D3 = ifelse(!is.na(D3), 34, NA),
D4 = ifelse(!is.na(D4), 35, NA), D5 = ifelse(!is.na(D5), 36, NA)) %>%
pivot_longer(cols = c(A0:D5), names_to = "sensors", values_to = "temp") %>%
ggplot(aes(x = DateTime, y = temp)) +
geom_point(color = "darkred", size = 0.001) +
scale_y_continuous(breaks = 1:36, labels = sens) +
scale_x_datetime(date_labels = "%b/%y", date_breaks = "1 month") +
xlab("Data") + ylab("Sensor")
invisible(dev.off())
agg_png('C:/Users/Daniel/Desktop/WCAMA 2021/grid_complet_all.png',
scaling = 4, width = 10000, height = 2000, units = 'px')
data_frank %>%
drop_na(A0:D5) %>%
mutate(A0 = ifelse(!is.na(A0), 1, NA), A1 = ifelse(!is.na(A1), 2, NA),
A2 = ifelse(!is.na(A2), 3, NA), A3 = ifelse(!is.na(A3), 4, NA),
A4 = ifelse(!is.na(A4), 5, NA), A5 = ifelse(!is.na(A5), 6, NA),
AB0 = ifelse(!is.na(AB0), 7, NA), AB1 = ifelse(!is.na(AB1), 8, NA),
AB2 = ifelse(!is.na(AB2), 9, NA), AB3 = ifelse(!is.na(AB3), 10, NA),
AB4 = ifelse(!is.na(AB4), 11, NA), AB5 = ifelse(!is.na(AB5), 12, NA),
B0 = ifelse(!is.na(B0), 13, NA), B1 = ifelse(!is.na(B1), 14, NA),
B2 = ifelse(!is.na(B2), 15, NA), B3 = ifelse(!is.na(B3), 16, NA),
B4 = ifelse(!is.na(B4), 17, NA), B5 = ifelse(!is.na(B5), 18, NA),
C0 = ifelse(!is.na(C0), 19, NA), C1 = ifelse(!is.na(C1), 20, NA),
C2 = ifelse(!is.na(C2), 21, NA), C3 = ifelse(!is.na(C3), 22, NA),
C4 = ifelse(!is.na(C4), 23, NA), C5 = ifelse(!is.na(C5), 24, NA),
CD0 = ifelse(!is.na(CD0), 25, NA), CD1 = ifelse(!is.na(CD1), 26, NA),
CD2 = ifelse(!is.na(CD2), 27, NA), CD3 = ifelse(!is.na(CD3), 28, NA),
CD4 = ifelse(!is.na(CD4), 29, NA), CD5 = ifelse(!is.na(CD5), 30, NA),
D0 = ifelse(!is.na(D0), 31, NA), D1 = ifelse(!is.na(D1), 32, NA),
D2 = ifelse(!is.na(D2), 33, NA), D3 = ifelse(!is.na(D3), 34, NA),
D4 = ifelse(!is.na(D4), 35, NA), D5 = ifelse(!is.na(D5), 36, NA)) %>%
pivot_longer(cols = c(A0:D5), names_to = "sensors", values_to = "temp") %>%
ggplot(aes(x = DateTime, y = temp)) +
geom_point(color = "darkgreen", size = 0.001) +
scale_y_continuous(breaks = 1:36, labels = sens) +
scale_x_datetime(date_labels = "%b/%y", date_breaks = "1 month") +
xlab("Data") + ylab("Sensor")
invisible(dev.off())
gc()
install.packages('reticulate')
devtools::install_github("Non-Contradiction/autodiffr")
library(autodiffr)
f <- function(x) sin(x) + 3*x^3 + log(x)/exp(x^0.5)
ad_grad(f, c(2, 3))
library(tidyverse)
library(MASS)
library(autodiffr)
f
ad_grad(f, c(2, 3))
setwd("C:/Users/Daniel/Desktop/Disciplinas/Tópicos Especiais em Lógica II/Trabalho Final")
library(dplyr)
library(readr)
library(fs)
library(purrr)
library(stringr)
library(tidyr)
library(ggplot2)
library(ggthemr)
library(lubridate)
ggthemr("fresh")
paths <- dir_ls("./raw_data/", glob = "*.csv")
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data <- data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute,
if_else(Minute == 0 & Second == 0, 12, 11 - Minute)),
Second = if_else(Second == 0, 0, 60 - Second),
Minute = if_else(qrt != "1st", (as.numeric(str_remove(qrt, "st")) - 1) * 12 + Minute, Minute)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(ID = id, Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(ID, Quarter, Minute, Second, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
#data_gp <-
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st")) %>%
group_by(ID, Minute) %>%
mutate(ScoreMinute = max(Score)) %>%
ungroup()
#data_gp <-
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st")) %>%
group_by(ID, Minute) %>%
mutate(ScoreMinute = max(Score)) %>%
ungroup() %>% distinct(ID, Minute)
#data_gp <-
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st")) %>%
group_by(ID, Minute) %>%
mutate(ScoreMinute = max(Score)) %>%
ungroup() %>% distinct(ID, Minute, .keep_all = T)
#data_gp <-
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st")) %>%
group_by(ID, Minute) %>%
mutate(ScoreMinute = max(Score)) %>%
ungroup() %>% distinct(ID, Minute, .keep_all = T) %>%
select(ID, Place, Quarter, Minute, ScoreMinute) %>%
rename(Score = ScoreMinute)
data_gp <- data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st")) %>%
group_by(ID, Minute) %>%
mutate(ScoreMinute = max(Score)) %>%
ungroup() %>% distinct(ID, Minute, .keep_all = T) %>%
select(ID, Place, Quarter, Minute, ScoreMinute) %>%
rename(Score = ScoreMinute)
data_gmm <- data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(Description != "Start Period")
write_csv(data_gp, "data_gp.csv")
write_csv(data_gmm, "data_gmm.csv")
data_gp
data_gmm
data_gp
data
library(glue)
data %>% mutate(Game = glue("{HomeName} (Mandante) vs {AwayName} (Visitante)"))
abb <- read_delim("abbreviations_NBA.txt")
abb <- read_delim("abbreviations_NBA.txt", delim = "-")
abb <- read_delim("abbreviations_NBA.txt", delim = " - ")
abb <- read.table("abbreviations_NBA.txt", sep = " - ")
abb <- read.table("abbreviations_NBA.txt", sep = "-")
abb
abb <- read_delim("abbreviations_NBA.txt", delim = "\t")
abb <- read_delim("abbreviations_NBA.txt")
abb <- read_table("abbreviations_NBA.txt")
abb <- read_fwf("abbreviations_NBA.txt")
abb <- read_delim("abbreviations_NBA.txt", delim = " ")
abb <- read_delim("abbreviations_NBA.txt", delim = "\t")
ab
abb
abb <- read_delim("abbreviations_NBA.txt", delim = "\t", col_names = c("Abb", "Name"))
data
data %>% mutate(HomeNameAll = abb %>% filter(HomeName == Abb) %>% select(Name))
data %>% mutate(HomeNameAll = abb[Abb == HomeName]$Name)
data %>% mutate(HomeNameAll = abb[abb$Abb == HomeName]$Name)
abb[abb$Abb == data$HomeName[1]]$Name
data$HomeName[1]
abb$Abb == data$HomeName[1]
abb[abb$Abb == data$HomeName[1]]
abb[abb$Abb == data$HomeName[1],]
abb[abb$Abb == data$HomeName[1],]$Name
data %>% mutate(HomeNameAll = abb[abb$Abb == HomeName,]$Name)
data %>% inner_join(abb, by = c("HomeName" == "Abb"))
data %>% inner_join(abb, by = c("HomeName" = "Abb"))
data %>% inner_join(abb, by = c("HomeName" = "Abb")) %>% View
data %>% inner_join(abb, by = c("HomeName" = "Abb")) %>% rename(HomeNameAll = Name) %>% inner_join(abb, by = c("AwayName" = "Abb")) %>% rename(AwayNameAll = Name)
data %>% inner_join(abb, by = c("HomeName" = "Abb")) %>% rename(HomeNameAll = Name) %>% inner_join(abb, by = c("AwayName" = "Abb")) %>% rename(AwayNameAll = Name) %>% View
# Preprocessamento
data <- data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute,
if_else(Minute == 0 & Second == 0, 12, 11 - Minute)),
Second = if_else(Second == 0, 0, 60 - Second),
Minute = if_else(qrt != "1st", (as.numeric(str_remove(qrt, "st")) - 1) * 12 + Minute, Minute)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(ID = id, Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
inner_join(abb, by = c("HomeName" = "Abb")) %>% rename(HomeNameAll = Name) %>%
inner_join(abb, by = c("AwayName" = "Abb")) %>% rename(AwayNameAll = Name) %>%
select(ID, Quarter, Minute, Second, HomeName, HomeNameAll, HomeScore, AwayName, AwayNameAll, AwayScore, Description, locX, locY)
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data <- data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute,
if_else(Minute == 0 & Second == 0, 12, 11 - Minute)),
Second = if_else(Second == 0, 0, 60 - Second),
Minute = if_else(qrt != "1st", (as.numeric(str_remove(qrt, "st")) - 1) * 12 + Minute, Minute)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(ID = id, Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
inner_join(abb, by = c("HomeName" = "Abb")) %>% rename(HomeNameAll = Name) %>%
inner_join(abb, by = c("AwayName" = "Abb")) %>% rename(AwayNameAll = Name) %>%
select(ID, Quarter, Minute, Second, HomeName, HomeNameAll, HomeScore, AwayName, AwayNameAll, AwayScore, Description, locX, locY)
data
data_gp <- data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st")) %>%
group_by(ID, Minute) %>%
mutate(ScoreMinute = max(Score)) %>%
ungroup() %>% distinct(ID, Minute, .keep_all = T) %>%
select(ID, Place, Quarter, Minute, ScoreMinute) %>%
rename(Score = ScoreMinute)
data_gp
data_gp <- data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, HomeNameAll, AwayNameAll, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st")) %>%
group_by(ID, Minute) %>%
mutate(ScoreMinute = max(Score)) %>%
ungroup() %>% distinct(ID, Minute, .keep_all = T) %>%
select(ID, Place, HomeNameAll, AwayNameAll, Quarter, Minute, ScoreMinute) %>%
rename(Score = ScoreMinute)
data_gp
data_gp <- data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, HomeNameAll, AwayNameAll, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st")) %>%
group_by(ID, Minute) %>%
mutate(ScoreMinute = max(Score)) %>%
ungroup() %>% distinct(ID, Minute, .keep_all = T) %>%
select(ID, Place, HomeNameAll, AwayNameAll, Quarter, Minute, ScoreMinute) %>%
rename(Score = ScoreMinute)
data_gmm <- data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(Description != "Start Period")
data_gmm
write_csv(data_gp, "data_gp.csv")
write_csv(data_gmm, "data_gmm.csv")
data_gp
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data <- data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute,
if_else(Minute == 0 & Second == 0, 12, 11 - Minute)),
Second = if_else(Second == 0, 0, 60 - Second),
Minute = if_else(qrt != "1st", (as.numeric(str_remove(qrt, "st")) - 1) * 12 + Minute, Minute)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(ID = id, Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
inner_join(abb, by = c("HomeName" = "Abb")) %>% rename(HomeNameAll = Name) %>%
inner_join(abb, by = c("AwayName" = "Abb")) %>% rename(AwayNameAll = Name) %>%
select(ID, Quarter, Minute, Second, HomeName, HomeNameAll, HomeScore, AwayName, AwayNameAll, AwayScore, Description, locX, locY)
data_gp <- data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, HomeNameAll, AwayNameAll, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st")) %>%
group_by(ID, Minute) %>%
mutate(ScoreMinute = max(Score)) %>%
ungroup() %>% distinct(ID, Minute, .keep_all = T) %>%
select(ID, Place, HomeNameAll, AwayNameAll, Quarter, Minute, ScoreMinute) %>%
rename(Score = ScoreMinute)
data_gp
expand(c(1, 2, 4))
data_gp %>% distinct(ID, Place, HomeNameAll, AwayNameAll, Quarter)
data_gp %>% distinct(ID, Place, HomeNameAll, AwayNameAll)
data_gp %>% distinct(ID, Place, HomeNameAll, AwayNameAll) %>% mutate(Score = 0:48)
data_gp %>% distinct(ID, Place, HomeNameAll, AwayNameAll) %>% group_by(ID) %>% mutate(Score = 0:48)
data_gp %>% distinct(ID, Place, HomeNameAll, AwayNameAll) %>% mutate(Score = list(0:48))
data_gp %>% distinct(ID, Place, HomeNameAll, AwayNameAll) %>% mutate(Score = list(0:48)) %>% unnest()
data_gp %>% distinct(ID, Place, HomeNameAll, AwayNameAll) %>% mutate(Score = list(0:48)) %>% unnest(Score)
data_gp %>% distinct(ID, Place, HomeNameAll, AwayNameAll) %>% mutate(Minute = list(0:48)) %>% unnest(Minute)
data_gp %>%
right_join(data_gp %>%
distinct(ID, Place, HomeNameAll, AwayNameAll) %>%
mutate(Minute = list(0:48)) %>%
unnest(Minute))
data_gp %>%
right_join(data_gp %>%
distinct(ID, Place, HomeNameAll, AwayNameAll) %>%
mutate(Minute = list(0:48)) %>%
unnest(Minute))
data_gp %>%
right_join(data_gp %>%
distinct(ID, Place, HomeNameAll, AwayNameAll) %>%
mutate(Minute = list(0:48)) %>%
unnest(Minute)) %>%
arrange(ID, Minute)
data_gp <- data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, HomeNameAll, AwayNameAll, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st")) %>%
group_by(ID, Minute) %>%
mutate(ScoreMinute = max(Score)) %>%
ungroup() %>% distinct(ID, Minute, .keep_all = T) %>%
select(ID, Place, HomeNameAll, AwayNameAll, Minute, ScoreMinute) %>%
rename(Score = ScoreMinute)
data_gp %>%
right_join(data_gp %>%
distinct(ID, Place, HomeNameAll, AwayNameAll) %>%
mutate(Minute = list(0:48)) %>%
unnest(Minute)) %>%
arrange(ID, Minute)
data_gp %>%
right_join(data_gp %>%
distinct(ID, Place, HomeNameAll, AwayNameAll) %>%
mutate(Minute = list(0:48)) %>%
unnest(Minute)) %>%
arrange(ID, Minute) %>%
group_by(ID) %>%
fill(Score, .direction = "up")
data_gp %>%
right_join(data_gp %>%
distinct(ID, Place, HomeNameAll, AwayNameAll) %>%
mutate(Minute = list(0:48)) %>%
unnest(Minute)) %>%
arrange(ID, Minute) %>%
group_by(ID) %>%
fill(Score)
library(dplyr)
library(readr)
library(fs)
library(purrr)
library(stringr)
library(tidyr)
library(ggplot2)
library(ggthemr)
library(lubridate)
library(glue)
ggthemr("fresh")
paths <- dir_ls("./raw_data/", glob = "*.csv")
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data <- data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute,
if_else(Minute == 0 & Second == 0, 12, 11 - Minute)),
Second = if_else(Second == 0, 0, 60 - Second),
Minute = if_else(qrt != "1st", (as.numeric(str_remove(qrt, "st")) - 1) * 12 + Minute, Minute)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(ID = id, Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
inner_join(abb, by = c("HomeName" = "Abb")) %>% rename(HomeNameAll = Name) %>%
inner_join(abb, by = c("AwayName" = "Abb")) %>% rename(AwayNameAll = Name) %>%
select(ID, Quarter, Minute, Second, HomeName, HomeNameAll, HomeScore, AwayName, AwayNameAll, AwayScore, Description, locX, locY)
data_gp <- data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, HomeNameAll, AwayNameAll, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st")) %>%
group_by(ID, Minute) %>%
mutate(ScoreMinute = max(Score)) %>%
ungroup() %>% distinct(ID, Minute, .keep_all = T) %>%
select(ID, Place, HomeNameAll, AwayNameAll, Minute, ScoreMinute) %>%
rename(Score = ScoreMinute)
data_gp %>%
right_join(data_gp %>%
distinct(ID, Place, HomeNameAll, AwayNameAll) %>%
mutate(Minute = list(0:48)) %>%
unnest(Minute)) %>%
arrange(ID, Minute) %>%
group_by(ID) %>%
fill(Score) -> data_gp
data_gmm <- data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(Description != "Start Period")
write_csv(data_gp, "data_gp.csv")
write_csv(data_gmm, "data_gmm.csv")
data_gp
