message(paste0("Jogo ", i, ": ", gsub("/","-",pbpData$g[3]$gcode), " Importado com Sucesso!"))
}
pbpData
pbpDataf
pbpDataf$cl
pbpDataf$cl - 12
library(rjson)
library(stringr)
library(dplyr)
# ID's de todos os jogos regulares do Houston Rockets (HOU) 19/20
schedules <- c(15, 32, 45, 61, 69, 86, 93, 107, 129, 142, 157,
169, 179, 193, 211, 224, 235, 259, 282, 303, 318,
333, 346, 356, 371, 386, 396, 419, 437, 453, 457,
478, 488, 501, 520, 558, 566, 577, 600, 611, 633,
645, 662, 675, 685, 698, 712, 722, 738, 752, 768,
774, 790, 806, 825, 841, 853, 870, 892, 903, 927,
940, 953, 963, 1238, 1248, 1261, 1273, 1290, 1298,
1304, 1315)
schedules <- paste0("002190", str_pad(as.character(schedules), 4, pad = "0"))
# Scrapping
for (i in schedules){
pbpURL <- paste0("http://data.nba.net/v2015/json/mobile_teams/nba/2019/scores/pbp/", i, "_full_pbp.json")
check <- tryCatch(pbpData <- fromJSON(file = pbpURL, method = "C"),
warning = function(war) {
message(paste("URL não encontrada no jogo", i))
next
},
error = function(err) message("Pulando para o próximo jogo"),
finally = function(f) print(paste("e: ", e)))
pbpDataf <- as_tibble(matrix(unlist(pbpData$g$pd[[1]]$pla), ncol = 17, byrow = TRUE)) %>%
mutate(qrt = "1st", .before = 1)
for (j in 2:length(pbpData$g$pd)){
pbpDataf <- bind_rows(pbpDataf, as_tibble(matrix(unlist(pbpData$g$pd[[j]]$pla), ncol = 17, byrow = TRUE)) %>%
mutate(qrt = paste0(j, "st"), .before = 1))
}
colnames(pbpDataf) <- c("qrt", "evt","cl","de","locX","locY","opt1","opt2","mtype","etype","opid","tid","pid","hs","vs","epid","oftid", "ord")
write.csv(pbpDataf, file = paste0("raw_data/", gsub("/","-",pbpData$g[3]$gcode),".csv"))
message(paste0("Jogo ", i, ": ", gsub("/","-",pbpData$g[3]$gcode), " Importado com Sucesso!"))
}
library(dplyr)
library(readr)
library(fs)
library(purrr)
library(stringr)
library(tidyr)
library(ggplot2)
library(ggthemr)
ggthemr("fresh")
paths <- dir_ls("./raw_data/", glob = "*.csv")
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)")) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Time, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY) -> data
data
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)")) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Time, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY) -> data
data
data %>% View()
class(data$Time)
library(lubridate)
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
qrt = qrt - minutes(12)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Time, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY) -> data
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
qrt = ms(qrt) - minutes(12)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Time, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = cl - minutes(12)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Time, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = ms(cl) - minutes(12)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Time, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
data$cl[1]
minute(data$cl[1])
as.character(data$cl[1])
as.character(data$cl)
sapply(data$cl, function(x) nchar(as.character(x)))
a <- sapply(data$cl, function(x) nchar(as.character(x)))
unique(a)
as.character(data$cl)
str_remove(as.character(data$cl), ".{3}$")
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = minutes(12) - ms(cl)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Time, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
# Preprocessamento
data <- data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = minutes(12) - ms(cl)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Time, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
data %>%
filter(HomeName == "HOU") %>%
ggplot(aes(x = Time, y = HomeScore)) +
geom_line()
data
data %>%
filter(HomeName == "HOU")
data %>%
filter(HomeName == "HOU") %>% summary()
ggplot(aes(x = Time, y = HomeScore)) +
geom_point()
data %>%
filter(HomeName == "HOU") %>%
ggplot(aes(x = Time, y = HomeScore)) +
geom_point()
data
data %>%
filter(HomeName == "HOU") %>%
ggplot(aes(x = Time, y = HomeScore)) +
geom_point()
data
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data <- data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = second(minutes(12) - ms(cl))) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Time, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
data
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = second(ms(cl))) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Time, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Time, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Minute, Second, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = 12 - minute(cl), Second = second(cl)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Minute, Second, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute, 11 - Minute)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Minute, Second, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute, 11 - Minute),
Second = if_else(Second == 0, 0, 60 - Second)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Minute, Second, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute, 11 - Minute),
Second = if_else(Second == 0, 0, 60 - Second)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Minute, Second, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY) %>% View()
data$cl
data$cl[1:100]
data$cl[1:200]
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute, if_else(Minute == 0 & Second == 0, 12, 11 - Minute)),
Second = if_else(Second == 0, 0, 60 - Second)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Minute, Second, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY) %>% View()
# Preprocessamento
data <- data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute,
if_else(Minute == 0 & Second == 0, 12, 11 - Minute)),
Second = if_else(Second == 0, 0, 60 - Second)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Minute, Second, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
data %>%
filter(HomeName == "HOU") %>%
ggplot(aes(x = Minute, y = HomeScore)) +
geom_point()
data %>%
filter(HomeName == "HOU") %>%
ggplot(aes(x = Minute, y = HomeScore)) +
geom_point() +
facet_wrap(~ Quarter)
data %>%
ggplot(aes(x = Minute)) +
geom_point(aes(y = HomeScore), data = data %>% filter(HomeName == HOU), color = "red") +
geom_point(aes(y = AwayScore), data = data %>% filter(AwayName == HOU), color = "blue") +
facet_wrap(~ Quarter)
data %>%
ggplot(aes(x = Minute)) +
geom_point(aes(y = HomeScore), data = data %>% filter(HomeName == "HOU"), color = "red") +
geom_point(aes(y = AwayScore), data = data %>% filter(AwayName == "HOU"), color = "blue") +
facet_wrap(~ Quarter)
data %>%
filter(Quarter %in% paste0(1:4, "st")) %>%
ggplot(aes(x = Minute)) +
geom_point(aes(y = HomeScore), data = data %>% filter(HomeName == "HOU"), color = "red") +
geom_point(aes(y = AwayScore), data = data %>% filter(AwayName == "HOU"), color = "blue") +
facet_wrap(~ Quarter)
data %>%
filter(Quarter %in% paste0(1:4, "st"))
data %>%
filter(Quarter != c("5st")) %>%
ggplot(aes(x = Minute)) +
geom_point(aes(y = HomeScore), data = data %>% filter(HomeName == "HOU"), color = "red") +
geom_point(aes(y = AwayScore), data = data %>% filter(AwayName == "HOU"), color = "blue") +
facet_wrap(~ Quarter)
data %>%
ggplot(aes(x = Minute)) +
geom_point(aes(y = HomeScore), data = data %>% filter(Quarter %in% paste0(1:4, "st"),
HomeName == "HOU"), color = "red") +
geom_point(aes(y = AwayScore), data = data %>% filter(Quarter %in% paste0(1:4, "st"),
AwayName == "HOU"), color = "blue") +
facet_wrap(~ Quarter)
data %>%
filter(Quarter %in% paste0(1:4, "st")) %>%
ggplot(aes(x = Minute)) +
geom_point(aes(y = HomeScore), data = data %>%
filter(Quarter %in% paste0(1:4, "st"), HomeName == "HOU"), color = "red") +
geom_point(aes(y = AwayScore), data = data %>%
filter(Quarter %in% paste0(1:4, "st"), AwayName == "HOU"), color = "blue") +
facet_wrap(~ Quarter)
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute,
if_else(Minute == 0 & Second == 0, 12, 11 - Minute)),
Second = if_else(Second == 0, 0, 60 - Second),
Minute = if_else(qrt != "1st", (as.numeric(str_remove(qrt, "st")) - 1) * 12 + Minute, Minute)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Minute, Second, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY) %>% View()
# Preprocessamento
data <- data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute,
if_else(Minute == 0 & Second == 0, 12, 11 - Minute)),
Second = if_else(Second == 0, 0, 60 - Second),
Minute = if_else(qrt != "1st", (as.numeric(str_remove(qrt, "st")) - 1) * 12 + Minute, Minute)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Minute, Second, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY) %>% View()
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data <- data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute,
if_else(Minute == 0 & Second == 0, 12, 11 - Minute)),
Second = if_else(Second == 0, 0, 60 - Second),
Minute = if_else(qrt != "1st", (as.numeric(str_remove(qrt, "st")) - 1) * 12 + Minute, Minute)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(Quarter, Minute, Second, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
data %>%
filter(Quarter %in% paste0(1:4, "st")) %>%
ggplot(aes(x = Minute)) +
geom_point(aes(y = HomeScore), data = data %>%
filter(Quarter %in% paste0(1:4, "st"), HomeName == "HOU"), color = "red") +
geom_point(aes(y = AwayScore), data = data %>%
filter(Quarter %in% paste0(1:4, "st"), AwayName == "HOU"), color = "blue")
library(rjson)
library(stringr)
library(dplyr)
# ID's de todos os jogos regulares do Houston Rockets (HOU) 19/20
schedules <- c(15, 32, 45, 61, 69, 86, 93, 107, 129, 142, 157,
169, 179, 193, 211, 224, 235, 259, 282, 303, 318,
333, 346, 356, 371, 386, 396, 419, 437, 453, 457,
478, 488, 501, 520, 558, 566, 577, 600, 611, 633,
645, 662, 675, 685, 698, 712, 722, 738, 752, 768,
774, 790, 806, 825, 841, 853, 870, 892, 903, 927,
940, 953, 963, 1238, 1248, 1261, 1273, 1290, 1298,
1304, 1315)
schedules <- paste0("002190", str_pad(as.character(schedules), 4, pad = "0"))
# Scrapping
for (i in schedules){
pbpURL <- paste0("http://data.nba.net/v2015/json/mobile_teams/nba/2019/scores/pbp/", i, "_full_pbp.json")
check <- tryCatch(pbpData <- fromJSON(file = pbpURL, method = "C"),
warning = function(war) {
message(paste("URL não encontrada no jogo", i))
next
},
error = function(err) message("Pulando para o próximo jogo"),
finally = function(f) print(paste("e: ", e)))
pbpDataf <- as_tibble(matrix(unlist(pbpData$g$pd[[1]]$pla), ncol = 17, byrow = TRUE)) %>%
mutate(qrt = "1st", .before = 1)
for (j in 2:length(pbpData$g$pd)){
pbpDataf <- bind_rows(pbpDataf, as_tibble(matrix(unlist(pbpData$g$pd[[j]]$pla), ncol = 17, byrow = TRUE)) %>%
mutate(qrt = paste0(j, "st"), .before = 1))
}
colnames(pbpDataf) <- c("qrt", "evt","cl","de","locX","locY","opt1","opt2","mtype","etype","opid","tid","pid","hs","vs","epid","oftid", "ord")
pbpDataf %>% mutate(id = i) -> pbpDataf
write.csv(pbpDataf, file = paste0("raw_data/", gsub("/","-",pbpData$g[3]$gcode),".csv"))
message(paste0("Jogo ", i, ": ", gsub("/","-",pbpData$g[3]$gcode), " Importado com Sucesso!"))
}
library(dplyr)
library(readr)
library(fs)
library(purrr)
library(stringr)
library(tidyr)
library(ggplot2)
library(ggthemr)
library(lubridate)
ggthemr("fresh")
paths <- dir_ls("./raw_data/", glob = "*.csv")
data <- map_dfr(paths, read_csv, .id = "path")
# Preprocessamento
data <- data %>%
mutate(path = str_extract(path, "(?<=\\-)(.*?)(?=\\.)"),
cl = str_remove(as.character(data$cl), ".{3}$"),
cl = ms(cl),
Minute = minute(cl), Second = second(cl),
Minute = if_else(Minute == 12, 12 - Minute,
if_else(Minute == 0 & Second == 0, 12, 11 - Minute)),
Second = if_else(Second == 0, 0, 60 - Second),
Minute = if_else(qrt != "1st", (as.numeric(str_remove(qrt, "st")) - 1) * 12 + Minute, Minute)) %>%
separate(col = path, into = c("AwayName", "HomeName"), sep = 3) %>%
rename(ID = id, Quarter = qrt, Time = cl, Description = de, HomeScore = hs, AwayScore = vs) %>%
select(ID, Quarter, Minute, Second, HomeName, HomeScore, AwayName, AwayScore, Description, locX, locY)
data$ID
data$ID[1]
data$HomeName
data$HomeName[1]
data %>%
filter(Quarter %in% paste0(1:4, "st"),
ID = schedules[1]) %>%
ggplot(aes(x = Minute, y = HomeScore)) +
geom_point()
data %>%
filter(Quarter %in% paste0(1:4, "st"),
ID == schedules[1]) %>%
ggplot(aes(x = Minute, y = HomeScore)) +
geom_point()
data %>%
filter(Quarter %in% paste0(1:4, "st"),
ID == schedules[1]) %>%
ggplot(aes(x = Minute, y = HomeScore)) +
geom_lines()
data %>%
filter(Quarter %in% paste0(1:4, "st"),
ID == schedules[1]) %>%
ggplot(aes(x = Minute, y = HomeScore)) +
geom_line()
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team")
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team = "HOU") %>%
mutate(Place = str_remove(Place, "Name"))
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"))
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore))
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY)
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score)
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T)
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(Score != 0)
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T)
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>% View()
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(Description == "Start Period" & Quarter != "1st")
data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st"))
data_gp <- data %>%
pivot_longer(cols = c(HomeName, AwayName), names_to = "Place", values_to = "Team") %>%
filter(Team == "HOU") %>%
mutate(Place = str_remove(Place, "Name"),
Score = if_else(Place == "Home", HomeScore, AwayScore)) %>%
select(ID, Place, Quarter, Minute, Second, Score, Description, locX, locY) %>%
distinct(ID, Place, Quarter, Score, .keep_all = T) %>%
filter(!(Description == "Start Period" & Quarter != "1st"))
data_gmm <- data_gp %>%
filter(Description != "Start Period")
write_csv(data_gp, "data_gp.csv")
write_csv(data_gmm, "data_gmm.csv")
